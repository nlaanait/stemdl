{
	"log_device_placement": {"type":"bool", "value": false, "desc": "Whether to log device placement."},
	"allow_soft_placement": {"type":"bool", "value": true, "desc": "Whether to allow variable soft placement on the device This is needed for multi-gpu runs."},
	"log_frequency": {"type":"int", "value": 50, "desc": "How often to log results to the console."},
	"save_frequency": {"type":"int", "value": 5000, "desc": "How often to save summaries to disk."},
	"max_steps": {"type":"int", "value": 2000, "desc": "Number of batches to run."},
	"num_epochs": {"type":"int", "value": 500, "desc": "Number of Data Epochs to do training"},
	"NUM_EXAMPLES_PER_EPOCH": {"type":"int", "value": 729000, "desc": "Number of examples in training data."},
	"worker_name": {"type":"str", "value": "worker", "desc": "Name of gpu worker to append to each device ops, scope, etc..."},
	"train_distort": {"type":"bool", "value": true, "desc": "Whether to perform data distortion during training."},
	"eval_interval_secs": {"type":"int", "value": 30, "desc": "How often to run model evaluation."},
	"num_examples": {"type":"int", "value": 10000, "desc": "Number of examples to run."},
	"run_once": {"type":"bool", "value": false, "desc": "Whether to run evalulation only once."},
	"output_labels": {"type":"str", "value":"alpha_mse; beta_mse; gamma_mse", "desc": "Labels to give the output of the NN. "},
	"eval_distort": {"type":"bool", "value": false, "desc": "Whether to perform data distortion during evaluation."},
	"NUM_CLASSES": {"type":"int", "value": 3, "desc": "Number of classes in training/evaluation data."},
	"OUTPUT_DIM": {"type":"int", "value": 3, "desc": "Dimension of the Network's Output"},
	"IMAGE_HEIGHT": {"type":"int", "value": 85, "desc": "IMAGE HEIGHT"},
	"IMAGE_WIDTH": {"type":"int", "value": 120, "desc": "IMAGE WIDTH"},
	"IMAGE_DEPTH": {"type":"int", "value": 1, "desc": "IMAGE DEPTH"},
	"CROP_HEIGHT": {"type":"int", "value": 64, "desc": "CROP HEIGHT"},
	"CROP_WIDTH": {"type":"int", "value": 96, "desc": "CROP WIDTH"},
	"RESIZE_HEIGHT": {"type":"int", "value": 64, "desc": "RESIZE HEIGHT"},
	"RESIZE_WIDTH": {"type":"int", "value": 96, "desc": "RESIZE WIDTH"},
	"IMAGE_FP16": {"type":"bool", "value": false, "desc": " Whether to use half-precision format for images."},
	"LABEL_DTYPE": {"type":"str", "value":"float64", "desc": " precision of label."},
	"CPU_ID": { "type": "str", "value":"/cpu:0", "desc": "Which CPU to use in a multi-CPU machine.Default 0"},
	"batch_size": { "type": "int", "value":128, "desc": "number of images per batch to propagate through the network. Powers of 2 are processed more efficiently.Default 64."},

	"data_dir": {"type": "str", "value":"../../data/oxide_perangles_GP_train_85x120.tfrecords", "desc": "path to tfrecords file with images + labels."},
	"checkpt_dir": { "type": "str", "value":"stemdl_checkpoint", "desc": "path where to save directory with training data, visualization, and TensorBoard events."},
	"network_config": { "type": "str", "value":"../json/network_VGG16_w_batch_norm.json", "desc": "path to .json file with neural net architecture."},
	"hyper_params": { "type": "str", "value":"../json/hyper_params_regressor_custom.json", "desc": "path to .json file with hyper-parameters."},
	"mode": { "type": "str", "value":"train", "desc": "operation mode, must be 'train' or 'eval' .Default: 'train'"},
	"num_gpus": { "type": "int", "value":2, "desc": "number of gpus to use during training.Default 1."}
}